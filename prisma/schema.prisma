// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user_basis {
  id              String  @unique @default(uuid())
  phone           String
  name            String  @default("")
  avatarURL       String  @db.MediumText
  gender          String?
  age             Int?
  vx              String?
  currentAddress  Json?
  gameList          Json? @default("[]")
  filterInfo      Json?
  filterConds     Json? // 筛选条件
  customTags      Json?
}

model user_login {
  id              String    @unique @default(uuid())
  phone           String
  password        String
  registerTime    DateTime  @default(now())
  recentLoginTime DateTime?
  accesstoken     String?
  refreshToken    String?
  code            String?
}

model chat_list {
  userId   String @unique
  chatList Json?
  // chatId  String
  // partnerId        String
  // partnerAvatarURL String   @db.MediumText
  // partnerName      String
  // lastMessage      String?   @db.MediumText
  // unReadCount      Int?
  // lastMessageTime  DateTime? @default(now())
}

model message_list {
  messageId  String   @unique @default(uuid())
  chatId     String
  senderId   String
  receiverId String
  createTime DateTime @default(now())
  content    String   @db.MediumText
}

// 文章表
model article {
  articleId           String   @unique @default(uuid())
  // articleAddress   Json // 活动地点
  senderCurrentAddress Json @default("[]")
  tag String // 分类标签（发日常，找搭子，约组队）
  gameName String? // 游戏名称(找搭子和约组队必选，随手发可以不选)
  senderId            String
  senderAvatarURL     String   @db.MediumText
  senderName          String
  senderGender        String
  senderAge           Int
  playTime DateTime? // 只有约组队才有，具体的游戏时间
  peopleNum Int? // 组队人数,只有约组队才有
  teamPeople Json? // 组队队伍信息，只有约组队才有,[{peopleId, peopleAvatarURL, peopleName, peopleGender}]
  // 如果把applicant放在这里，就必须要从数据库里面取出来才能count计数了，也没法单独取出某个字段，没法加一些where条件，不能做到极致的性能优化，所以需要分表
  // applicant Json? 
  textContent         String // 文字内容
  commentNum          Int      @default(0) // 评论数
  viewNum             Int @default(0) // 浏览量（点进去才算）
  imageUrlList        Json @default("[]")// 图片内容数组，现在是base64,以后是url路径
  createTime          DateTime @default(now())
  updateTime          DateTime @updatedAt
}

// 申请加入队伍的人的信息，和teamPeople类似，只有约组队才有m[{peopleId, peopleAvatarURL, peopleName, peopleGender}]
model team_applicant {
  applicationId   String @unique @default(uuid())
  articleId           String
  userId String
  textContent String // 申请信息
  articleContent String // 文章文字内容
  articleFirstImageURL  String? @db.MediumText // 文章首图
  status Int // 当前状态（0为待处理，1为已同意，2为已拒绝）
  userAvatarURL String @db.MediumText
  userName String
  userGender String
}

// 文章评论表
model article_comment {
  articleCommentId       String   @unique @default(uuid())
  articleId       String
  articleSenderId String
  articleTextContent String?
  articleFirstImageURL String? @db.MediumText // 文章首图
  level  Int? // 1为一级评论，2为二级评论（回复1级评论），3为三级评论（回复2级评论），用于区分前端的展示
  textContent         String?
  imageURL String? @db.MediumText // 评论中只能发一张图片
  senderId        String
  senderGender    String
  isRead Boolean @default(false)
  senderAge Int
  senderCurrentAddress Json
  senderAvatarURL String   @db.MediumText
  senderName      String
  createTime      DateTime @default(now())
  updateTime      DateTime @updatedAt
}

// 文章点赞表
model article_like {
  articleLikeId   String   @unique @default(uuid())
  articleId       String
  articleSenderId String
  articleTextContent String?
  senderId        String
  senderGender    String
  isRead Boolean @default(false)
  senderAge Int
  senderCurrentAddress Json
  senderAvatarURL String   @db.MediumText
  senderName      String
  createTime      DateTime @default(now())
  updateTime      DateTime @updatedAt
}

model article_comment_like {
  articleCommentLikeId   String   @unique @default(uuid())
  articleCommentId String
  articleId       String
  articleSenderId String
  commentSenderId String
  articleTextContent String?
  senderId        String
  senderGender    String
  isRead Boolean @default(false)
  senderAge Int
  senderCurrentAddress Json
  senderAvatarURL String   @db.MediumText
  senderName      String
  createTime      DateTime @default(now())
  updateTime      DateTime @updatedAt
}

// model activity {
//   activityId          String   @unique @default(uuid())
//   gameName            String // 游戏名称(王者荣耀，和平精英等)
//   senderCurrentAddress Json
//   expireTime          DateTime // 绝对时间，用服务器时间作比较
//   senderId            String
//   senderAvatarURL     String @db.MediumText
//   senderName          String
//   senderGender        String
//   senderAge           Int
//   textContent         String // 文字内容
//   viewNum             Int @default(0)// 浏览量（点进去才算）
//   maxPaticipant       Int // 最大参与人数
//   currentPaticipant   Json // 目前参与人信息(userId, userAvatarURL, userGender, userName)
//   createTime          DateTime @default(now())
//   updateTime          DateTime @updatedAt
// }
